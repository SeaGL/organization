mediatype,collection,publisher,year,licenseurl,language,file,identifier,date,creator,title,description
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Mairin_Duffy-UX_Plus_Free_Software_Equals_Love.mp4,SeaGL2020-Mairin_Duffy-UX_Plus_Free_Software_Equals_Love,2020-11-13,Máirín Duffy,UX + Free Software = Love,Keynote
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Daniel_Takamori-The_Soul_Of_A_Computer.mp4,SeaGL2020-Daniel_Takamori-The_Soul_Of_A_Computer,2020-11-13,Daniel Takamori,The Soul Of A Computer,Keynote
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Mariatta_Wijaya-Oops_I_Became_an_Open_Source_Maintainer.mp4,SeaGL2020-Mariatta_Wijaya-Oops_I_Became_an_Open_Source_Maintainer,2020-11-13,Mariatta Wijaya,Oops! I Became an Open Source Maintainer!,"<p>I consider myself relatively new to the open source world; my first open source contribution was in summer of 2016. Pretty soon I found myself being given commit rights to other people’s open source projects. Being a new open source maintainer brings a set of unique challenges that I was not fully prepared for. In this talk, I will share my journey and the things I’ve learned along the way, and some advice for other aspiring open source maintainers and contributors.</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Mariah_Villarreal-Rise_up_for_free_software_in_schools.mp4,SeaGL2020-Mariah_Villarreal-Rise_up_for_free_software_in_schools,2020-11-13,Mariah Villarreal,Rise up for free software in schools!,"<p>U.S. public education systems are failing students and teachers in our digital world. Increasingly, teachers and students are told to use proprietary software, so they do, without much of a choice and without enough resources to consider the repercussions or alternatives. Unfortunately, this negatively impacts Black and Brown young people the most and our community needs to better address this.</p><p>This talk will briefly introduce why free software is important in education, give examples of how proprietary software is rapidly deployed in schools and credit people who are rising up against this injustice, big and small.</p><p>It is imperative to reach out to the education community about these issues. There are real, actionable solutions!</p><p>Learn about this ongoing crisis and how YOU can join the effort in a meaningful, inclusive way. Time and resources will be acknowledged for skill sharing as well.</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Neil_McGovern-Patently_Obvious.mp4,SeaGL2020-Neil_McGovern-Patently_Obvious,2020-11-13,Neil McGovern,Patently Obvious,"<p>In August 2019, GNOME was notified that it was being sued in the state of California over a broad patent which allegedly covered Shotwell, a photo management application. The plaintiff? A prolific filer of patent suits, and a patent assertion entity. This was the first time that a FOSS project has been sued for patent infringement.</p><p>This talk is the story from the Executive Director of the GNOME Foundation, on how he responded and the strategies taken to not only defeat the suit, but to secure a ground-breaking agreement which means that this particular PAE will never be able to sue any FOSS project ever again.</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Ruth_Ikegah-A_Beginner_Inclusive_Approach_to_Open_Source.mp4,SeaGL2020-Ruth_Ikegah-A_Beginner_Inclusive_Approach_to_Open_Source,2020-11-13,Ruth Ikegah,A Beginner-Inclusive Approach to Open Source,"<p>The feeling of being accepted, guided, and given the opportunity to improve irrespective of current abilities is priceless.</p><p>There's a need to set up a specialized team in open source communities and organizations whose primary goal is advocating, embracing, and integrating beginners into OSS. This team should focus on implementing roadmaps and personal guides with an inclusive and accessible approach to address the challenges first-timers face when joining OSS projects.</p><p>There has been massive progress in the acceptance and practice of open source globally, but we have lagged in teaching the ideology of contributing to and taking advantage of open source with beginners.</p><p>Data from two Twitter polls on open source contribution show:</p><ul><li>42.1% of people do not know how to contribute.<a href=""https://twitter.com/IkegahRuth/status/1277593968050667522"">Here</a></li><li>40.3% of senior developers do not contribute at all.<a href=""https://twitter.com/IkegahRuth/status/1277590995316674562"">Here</a></li></ul><p>I'm convinced that the difficulties contributing to open source projects fuel these trends. We've missed out on their input, creativity, and impact on developing products to improve the world. With an analysis of the challenges involved, a sustainable plan of effective and beginner-friendly guidance by open source communities will educate beginners to contribute to open source.</p><p>As a beginner, I'm in a good position to relate and talk about the challenges beginners face when trying to understand and contribute to open source.</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Stephen_Wilson-The_Open_Digital_Photography_Workflow.mkv,SeaGL2020-Stephen_Wilson-The_Open_Digital_Photography_Workflow,2020-11-13,Stephen Wilson,The Open Digital Photography Workflow,"<p>The photographic workflow of a photographer using Open Source tools and Open Source friendly hardware.</p><p>With consolidation of the photographic space by a few large companies, photographers have been funneled in to proprietary workflows</p><p>Using hardware supporting open standards and open source software we’ll walk through how to move out of the proprietary photography workflow, take ownership of the photographer’s own data and art.</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Gareth_J_Greenaway-Open_Source_Secrets_Management.mp4,SeaGL2020-Gareth_J_Greenaway-Open_Source_Secrets_Management,2020-11-13,Gareth J. Greenaway,Open Source Secrets Management,"<p>One common problem that all organizations need to solve when planning out their infrastructure is the need for storing secrets, such as passwords, credentials, API keys, and other sensitive data. Often this information is used for application deployments or simply running company applications. But it might need to be segmented by environment or use, with only certain groups or individuals having access. Fortunately there are many free &amp; open source solutions to secrets management. In this talk:</p><ul><li>We'll look at the various free &amp; open source solutions that are available.</li><li>We'll look at some pluses and minuses for each of them.</li><li>Finally we'll look at using some of these solutions in a real world scenario.</li></ul>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-der_hans-FLOSS_and_you.mp4,SeaGL2020-der_hans-FLOSS_and_you,2020-11-13,der.hans,FLOSS and you,"<p>User freedom addresses software licensing from the perspective of those using the software.</p><p>What are advantages and disadvantages of different licensing models in relation to user freedom?</p><p>How does licensing impact individuals, organizations and businesses as we use software?</p><p>How does software distribution ( packages, cloud, bundled in a product ) impact user freedom?</p><p>The presentation and ensuing conversation is about user freedom and the impact of the software we choose to use.</p><p>It's a consideration of the everyperson relationship with software licensing.</p><p>Attendees will consider how the following relate to them:</p><ul><li>software usage models</li><li>the four freedoms of Free Software</li><li>the open source development model</li><li>strong and weak copyleft</li></ul>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Suraj_Kumar_Mahto-Introducing_FOSS_Culture_at_Universities.mp4,SeaGL2020-Suraj_Kumar_Mahto-Introducing_FOSS_Culture_at_Universities,2020-11-13,Suraj Kumar Mahto,Introducing FOSS Culture at Universities,"<p>Hello everyone, this is Suraj Kumar Mahto from BIT Sindri majoring in Information Technology. I have just completed my sophomore year. I am one of the leads in a developer club in my college. Since our advent as a developer club, we have started up numerous initiatives to inculcate Open Source as a culture in our institution. So I would like to express my experience and opinion on that.</p><p>Some keynote points that should be discussed in such sessions are:</p><ul><li>INTRO SESSIONS : How would you introduce Open Source to a freshmen? Most of the freshmen in college have a quite vague knowledge about Open Source technologies especially when they are heavily surrounded by Proprietary softwares from early school. Students can be explained in layman terms about the ‘Free’ and Open Source as a recipe as described by Richard Stallman and FOSS can be described as a recipe which can be improvised and shared while still having the original recipe with you inducing a type of free culture. Free as if Freedom.</li><li>TROUBLESHOOTING - The major hurdle new users face the general procedure on troubleshooting. How they should proceed on various issues.</li><li>SEARCH ENGINE USAGE- Using a search engine is considered an art. Students can be introduced to this art.</li></ul><p>LINUX INSTALLATION FESTS - Engage &amp; Enquire</p><ul><li>Students will be provided bootable devices and live help sessions to install GNU/Linux.</li><li>Fun awareness events to engage and inform participants about the FOSS history.</li><li>Talk sessions by prominent speakers in the Open Source field.</li><li>Encouraging the students to use GNU/Linux as a daily driver.</li></ul><p>MONTHLY FOSS JAM SESSIONS -</p><ul><li>Monthly meetups to showcase Open Source projects and discuss upon that.</li><li>Support groups to provide help 24*7 for the new users.</li></ul><p>AT UNIVERSITY LEVEL - </p><ul><li>Encouraging the use of Open Source Softwares as their daily driver.</li><li>Explaining the pros of using FOSS technologies over proprietary ones like privacy, active community support etc</li><li>Implementing these over Faculty as well as students.</li><li>Explaining students about various open source programs such as GSoC, Rails Summer of Code.</li></ul>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Josh_Boykin-Gaming_for_Good_Using_Passions_and_Technology_for_Social_Change.mp4,SeaGL2020-Josh_Boykin-Gaming_for_Good_Using_Passions_and_Technology_for_Social_Change,2020-11-13,Josh Boykin,Gaming for Good: Using Passions and Technology for Social Change,"<p>I'd love to give a talk about using the technology around us and our personal interests to make a social impact, and the ways that open doors to make broader change in unexpected ways. Using Intelligame as an example, I'd like to talk about starting a criticism website using Wordpress and beginning my career as a streamer, but also talk about the social contracts and policies I put together to build the community into a conscious, progressive collective that's raised over $20,000 for charities. Learning streaming also opened a space for me to work with organizations like the ACLU to help them organize online events, which powers even more activism. I think anyone can use the skills they have and the interests they enjoy to help make a difference so long as they connect with the right people and keep an open mind.</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Megan_Guiney-Democratizing_Documentation.mp4,SeaGL2020-Megan_Guiney-Democratizing_Documentation,2020-11-13,Megan Guiney,Democratizing Documentation,"<p>Democratizing knowledge has always been a core value of open source and activist communities alike. However, as open source has grown into an institution in its own right, the norms of each community have become cemented, and thus barriers to participation built.</p><p>As these barriers have become increasingly apparent, we have seen the rise of a new kind of technical content- zines, which have long been used in activist communities to interrogate, subvert, and topple exclusion via the free sharing of information which has traditionally been available to a privileged few.</p><p>In this high level talk, attendees will learn about:</p><ul><li>Where zines came from</li><li>Zine culture as an implementation of the “New Hacker Ethic”</li><li>The strengths of zines as a source of technical knowledge</li><li>How to find, read, and start making zines of our own</li></ul>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Mike_Hamrick-Features_of_a_Modern_Terminal_Emulator.mp4,SeaGL2020-Mike_Hamrick-Features_of_a_Modern_Terminal_Emulator,2020-11-13,Mike Hamrick,Features of a Modern Terminal Emulator,"<p>Depending on your computing platform, there are a dizzying array of terminal emulators from which to choose. Which one will suit you best depends on which features and capabilities you require. Terminals and terminal emulators have come a long way since the teletype, the VT100, and even the relatively modern xterm. In this talk we'll explore the landscape of capabilities and features offered by the modern terminal emulator including:</p><ul><li>Font handling: unicode, icon fonts, fallbacks &amp; more</li><li>SGR escape sequences for italics, bold, underline, strike-through, etc</li><li>Xterm mouse support</li><li>System clipboard integration via OSC-52</li><li>Paste bracketing</li><li>24-bit color</li><li>Bit-mapped graphics support</li></ul><p>Whether you're looking for new ideas to improve your terminal workflow, or to simply freshen up your 80x24 look -- if you spend more than few minutes a day in the terminal this talk is for you!</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Jill_Rouleau-Demystifying_Contributor_Culture.mp4,SeaGL2020-Jill_Rouleau-Demystifying_Contributor_Culture,2020-11-13,Jill Rouleau,"Demystifying Contributor Culture: IRC, Mailing Lists, and Netiquette for the 21st Century","<p>Want to contribute to an Open Source project, but don't know what to expect or how to navigate the new contributor process? You're not alone! Much of the culture and tools used to participate in upstream communities is often shrouded behind in-knowledge and unfamiliar to new contributors. This session will draw back the curtain on these topics so that new developers and experienced professionals alike can make their first Open Source contributions with confidence.</p><p>Attendees will get answers to questions like:</p><ul><li>Aren't Open Source communities just a bunch of strangers on the internet? How do you communicate and get anything done?</li><li>IRC and mailing lists? Does anyone really still use those things anymore?</li><li>No one is responding to my messages/posts/PRs, what gives?</li><li>What is a day in the life of a project maintainer like?</li></ul>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Elijah_C_Voigt-Lets_Make_Games_with_Rust.mp4,SeaGL2020-Elijah_C_Voigt-Lets_Make_Games_with_Rust,2020-11-13,Elijah C. Voigt,Let's Make Games with Rust,"<p>In this talk we will write a small game in Rust using the Amethyst game engine. You will learn about Rust as well as some basic game programming principles like the Entity, Component, System (ECS). You will not need prior experience with games programming, Rust, nor Amethyst, but a passing familiarity with Rust will give you a head start.</p><p>Game's industry software is largely dominated by C and C++. These languages are fast and productive, but they can also be buggy and prone to catastrophic programming errors.</p><p>Enter: the Rust Programming Language. Rust is a safe yet powerful systems programming language. Rust looks and acts a lot like C++, but guarantees safety from pesky memory bugs that countless RFCs have been written about.</p><p>Rust's safety is most critical in device drivers and life support software, where a crash can mean life and death, but we can also use it to make games?</p><p>Enter: the Amethyst Game Engine. Amethyst is a fully open source game engine written in Rust. Amethyst provides tools for writing 2D and 3D games and implements many industry standards like an ECS framework, and data-driven design. Not sure what those works mean? Come find out!</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Rowin_Andruscavage-Overclocking_for_Your_Mind_and_Body.mp4,SeaGL2020-Rowin_Andruscavage-Overclocking_for_Your_Mind_and_Body,2020-11-13,Rowin Andruscavage,Overclocking for Your Mind and Body,"<p>You’ve tweaked your cooling setup to overclock your CPU, how can you increase the flow rate of your own central nervous system? Learn to apply traditional martial arts techniques and get every last bit of juice from your wetware. Join this session to learn how to benchmark your system and identify and remove blockages and I/O bottlenecks. Practice traditional techniques with modern applications that help prevent RSI and keep your mind and body fresh and productive throughout your most grueling software development sessions.</p><p>Presented by Oom Yung Doe Northwest, a 501(c)(3) non-profit Traditional Martial Arts school with a mission to bring health and wellness to our community through Traditional Martial Arts training. http://oomyungdoe-nw.com/</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Kaylea_Champion-How_to_build_a_zombie_detector.mkv,SeaGL2020-Kaylea_Champion-How_to_build_a_zombie_detector,2020-11-13,Kaylea Champion,How to build a zombie detector: Identifying software quality problems,"<p>How do we measure and track the quality of the open source software we rely on? When a project is in trouble, how do we know? What have past approaches to this question gotten right, where have they gone astray, and what's still a mystery?</p><p>Predicting and measuring software quality is a subject of substantial academic research but not always discussed with the people who actually make software. To help close that gap, we sifted hundreds of research articles that proposed, assessed, and sometimes verified different metrics of software quality. In this talk, I'll summarize the current state of the software quality field, and explore the map of known approaches: from by-hand inspections through repository mining and machine learning. What can these approaches tell us? I'll share both the best, most-validated metrics we found and the weakest, least-proven ones.</p><p>Finally, I'll share a proposed measurement strategy, drawn from work in multiple disciplines -- informed by practical experience as well as computer science, information systems, and social science. I'll share our preliminary results from a project to measure the relative health of thousands of open source projects, and what that might mean for the future of our shared digital infrastructure.</p><p>After hearing these approaches to measuring quality and some of the results of using them, I hope you'll offer your feedback: what zombies have you seen, slain, or run away from? Do the academic approaches I've described make sense here among the living -- in the everyday experiences of development and systems administration?</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Sumana_Harihareswara-Stand_up_comedy_about_FLOSS.mp4,SeaGL2020-Sumana_Harihareswara-Stand_up_comedy_about_FLOSS,2020-11-13,Sumana Harihareswara,Stand-up comedy about FLOSS,"<p>What off-the-wall licenses should the OSI consider next? Where's the fine line between maintainer success and maintainer burnout? Should we alias <code>git reset --hard</code> to <code>git regret --hard</code>?</p><p>I've been in free and open source software for years, and I perform stand-up comedy. Sit back and enjoy 20 minutes of jokes about our field.</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Kathy_Giori-Projects_With_A_Positive_Potential_For_Impact.mp4,SeaGL2020-Kathy_Giori-Projects_With_A_Positive_Potential_For_Impact,2020-11-14,Kathy Giori,Projects With A Positive Potential For Impact,Keynote
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Cameron_Bielstein-Building_Free_CI_CD_with_GitHub_Actions.mp4,SeaGL2020-Cameron_Bielstein-Building_Free_CI_CD_with_GitHub_Actions,2020-11-14,Cameron Bielstein,Building Free CI/CD with GitHub Actions,"<p>Build free CI/CD for your open source repository</p><p>Continuous integration and continuous deployment (CI/CD) is a popular DevOps method of ensuring software quality and velocity in a modern development environment through automated builds, tests, and deployments.</p><p>GitHub Actions is GitHub's built-in workflow framework for tasks such as CI/CD and more. It is fully integrated with GitHub repositories and, best of all, it is completely free for open source</p><p>This hands-on demonstration will go from zero to fully functional CI/CD pipeline in under 20 minutes using GitHub Actions. Attendees will come away with the skills and knowledge (and sample code) necessary to configure automated PR builds, test runs, and continuous deployment for own projects.</p><p>This talk is an introductory talk to GitHub's CI/CD offering and is suitable for all experience levels. Content will include introductions of concepts, a ""live"" coding demonstration of building a GitHub Actions, and time for questions and answers.</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Elizabeth_K_Joseph-Open_Source_on_the_Mainframe_in_1960_1999_and_Today.mp4,SeaGL2020-Elizabeth_K_Joseph-Open_Source_on_the_Mainframe_in_1960_1999_and_Today,2020-11-14,Elizabeth K. Joseph,"Open Source on the Mainframe in 1960, 1999, and Today","<p>In what could be called a grandfather of open source user groups, SHARE, the first enterprise IT user group, was formed in 1955. By 1960 they had collaboratively adopted and released the SHARE Operating System. This laid the groundwork for what was to become a tight relationship between the mainframe and users who collaboratively got together to develop and share software.</p><p>In this talk we’ll explore this history, and where the mainframe is today with relation to the modern open source movement by talking about the latest developments in the realm of Linux for the mainframe and projects maintained by the Open Mainframe Project.</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Aeva_Black-Crossing_the_Gender_Divide.mp4,SeaGL2020-Aeva_Black-Crossing_the_Gender_Divide,2020-11-14,Aeva Black,Crossing the Gender Divide,"<p>Fifteen years into a successful career in tech, I came out. I had a choice to make: whether to walk away, or try and salvage my professional network. I say I ""came out"" in 2017 though this process never really ends, and in this talk I'm going to come out to all of you again. And while my jobless period eventually came to a close, it lasted far longer than I expected. I'd like to share with you what I learned.</p><p>Was my network shrinking as colleagues chose to distance themselves from me, or because I felt nervous to reach out and have another awkward conversation? Was my bias changing because bad experiences taught me to anticipate more of them, or because my hormones were changing? Was my worldview changing, or just other people's perception of me?</p><p>I asked myself these questions daily for almost two years.</p><p>Through meditation, I understood that perception bias can be directly perceived, and I learned some tools to recognize the impact that my bias has on my decisions.</p><p>We can not become unbiased.</p><p>What matters is what we do about it.</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Bri_Hatch-10_Vim_Tricks.mp4,SeaGL2020-Bri_Hatch-10_Vim_Tricks,2020-11-14,Bri Hatch,10 Vim Tricks,"<p>Some times you need to write software to solve problems and automate systems. But sometimes all you really need is a good editor and a few tricks up your sleeves.</p><p>I find myself frequently turning to vim to handle repetitive tasks, and create commands I'll run from the command line. Why write python when some efficient macros will do, or an occasional <code>:%s</code> will save you time?</p><p>And naturally we will cover that godsend of typos, xp.</p><p>Bring your ideas or needs - we will be both interactive and have show and tell.</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Molly_de_Blanc-Introduction_to_Ethics_from_an_Ethicist_in_Training.mp4,SeaGL2020-Molly_de_Blanc-Introduction_to_Ethics_from_an_Ethicist_in_Training,2020-11-14,Molly de Blanc,Introduction to Ethics from an Ethicist-in-Training,"<p>Have you ever asked yourself: What is my responsibility to the people using the technology I make? How do I make decisions about what is right and wrong when choosing to work on something? What even is right and wrong?</p><p>Well, let's find some answers (or, really, more questions). This whirlwind tour of philosophical inquiry is designed for the FOSS community by the FOSS community. Our focus will be on moral responsibility. I'll even throw in a few Trolley Problems for good measure.</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Bhagyashree_Bee_Padalkar_and_Justin_W_Flory-Time_for_Action.mp4,SeaGL2020-Bhagyashree_Bee_Padalkar_and_Justin_W_Flory-Time_for_Action,2020-11-14,"Bhagyashree ""Bee"" Padalkar & Justin W. Flory",Time for Action: How to build D&I in your project,"<p>Diversity and inclusion (D&amp;I) is not a new topic in Open Source. But what does D&amp;I work look like in the context of open source communities? <a href=""https://bee2502.github.io/"">Bhagyashree “Bee” Padalkar</a> and <a href=""https://jwf.io/"">Justin W. Flory</a> share lessons learned from five years of volunteering and leading D&amp;I teams in open source communities.</p><p>In this talk, Bee and Justin tell the story of how the Fedora Project’s <a href=""https://docs.fedoraproject.org/en-US/diversity-inclusion/"">Diversity &amp; Inclusion Team</a> came to be, what common pitfalls and challenges are in D&amp;I work, and a guiding principle behind everything the team does.</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Kara_Sowles-Alcohol_and_Inclusivity_in_Tech.mp4,SeaGL2020-Kara_Sowles-Alcohol_and_Inclusivity_in_Tech,2020-11-14,Kara Sowles,Alcohol & Inclusivity in Tech,"<p>Alcohol is a major theme in tech culture, whether it's bonding with peers near the office keg, letting off steam with afterword drinks, or meeting industry giants over conference beers. Unfortunately, tech culture around alcohol often excludes people on the basis of gender, medication, religion, pregnancy, addiction, age, and more. We'll learn some of the basic pitfalls to avoid, and then talk solutions with easy-to-practice ally skills for how to discuss, serve, and approach alcohol at events and in the workplace.</p><p>We're all virtual right now, which provides a lot more space to make our own decisions free of professional obligation. It's also a great time to reconsider how we approach things, so we can return to the office and events with fresh eyes and new skills.</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Elana_Hashman-AMA_About_Kubernetes.mp4,SeaGL2020-Elana_Hashman-AMA_About_Kubernetes,2020-11-14,Elana Hashman,AMA (Ask Me Anything) About Kubernetes,<p>Ask the Chair of Kubernetes SIG Instrumentation anything about Kubernetes! Rachel Kelly will be moderating and passing the questions from the audience up to Elana!</p>
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Ian_Kelling-When_does_a_service_take_away_your_software_freedom.mp4,SeaGL2020-Ian_Kelling-When_does_a_service_take_away_your_software_freedom,2020-11-14,Ian Kelling,When does a service take away your software freedom?,"<p>A lesser known tenet of the free software movement: ""You can have control over a program someone else wrote (if it's free), but you can never have control over a service someone else runs, so never use a service where in principle a program would do."" - <a href=""https://www.gnu.org/philosophy/who-does-that-server-really-serve.en.html"">gnu.org/philosophy</a></p><p>But when exactly would a program do? I will dig into the details and examine popular services so that you can gain confidence in evaluating services you encounter.</p><p>Finally, I will dip into other dimensions of judging services, such as how they treat your data.</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Wm_Salt_Hale-Contacts_to_Connections_CRM_funneling_for_projects_and_people.mp4,SeaGL2020-Wm_Salt_Hale-Contacts_to_Connections_CRM_funneling_for_projects_and_people,2020-11-14,Wm Salt Hale,Contacts to Connections: CRM funneling for projects and people,"<p>Do you have a pile of sticky notes, a folder full of spreadsheets, or a dusty box of business cards gathered at conferences? Have you ever had a donor approached by multiple people trying to gather the same information? Beyond an organizational context; are there friends that you haven't spoke to for some time and would like to, but how long has it been?</p><p>We meet new folks daily, whether in a personal context or organizational. Often, it becomes hard to keep track of where, when, and how the connections were made. Further, the upkeep of these connections include remembering important dates, following steps in a particular order, and capturing information from multiple sources. A solution to assist with all of this is the often used sales tool, a contact relationship manager (CRM). These provide many features beyond that of a mere address book.</p><p>Come learn about two non-sales focused tools, CiviCRM and Monica. See how they can be used to clean up your contacts; getting them back under <em>your</em> control.</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Deb_Nicholson-Move_Slow_and_Try_Not_to_Break_Each_Other.mp4,SeaGL2020-Deb_Nicholson-Move_Slow_and_Try_Not_to_Break_Each_Other,2020-11-14,Deb Nicholson,Move Slow and Try Not to Break Each Other,"<p>Sustainable open source starts with building sustainable communities. If our workplaces and our communities aren't sustainable then our projects won't be either. Constant chaos and breakneck speeds can only occasionally create sustainable projects, by accident. The next generation of software production will need to lean into relationship building, mission sharing and strategic planning. This talk will explore:</p><ul><li>How projects can get ready for the long haul</li><li>Why resiliency starts with inter-dependency</li><li>How slower structures enable stronger communities</li></ul><p>Many of us are doing many of the things that help build sustainable projects already, but what if we could be more intentional? Certain structures and norms can make it hard to implement positive changes even when good ideas come up. Shared leadership and mission-driven organizations offer solid structures for sustainable communities and sustainable software development. Mutual respect and humane working conditions are how we'll create a culture that values both experience and institutional memory while encouraging new people and new ideas. Let's slow down for sustainability!</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Aaron_Wolf-Software_freedom_through_collective_action.mp4,SeaGL2020-Aaron_Wolf-Software_freedom_through_collective_action,2020-11-14,Aaron Wolf,Software freedom through collective action,"<p>For even the most tech-savvy, achieving software freedom today is no easy task. And so much of our free software serves primarily as upstream foundations for <em>proprietary</em> end-user software companies with huge teams funded by SaaSS paywalls and third-party ads.</p><p>The trickle-down model of software freedom does not work. End-users being able to contribute patches helps but is not enough. What can we do? To see widespread freedom, we must <em>center end-user voices</em> and fund <em>end-user</em> focused free software well enough to out-compete proprietary options.</p><p>This talk will not focus on the specific solutions we're working on at Snowdrift.coop. Instead, I will describe the economic and political reasons why the free software movement needs stronger end-user orientation and why it's so hard to build the necessary solidarity. The impact will be successful whether people want to join our efforts or figure out how to apply this orientation elsewhere in the movement.</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Amanda_Sopkin-The_United_States_History_with_Free_Software.mp4,SeaGL2020-Amanda_Sopkin-The_United_States_History_with_Free_Software,2020-11-14,Amanda Sopkin,The United States' History with Free Software and what we can do to improve the Future,"<p>Properly caring for and protecting citizen data requires the use of free software, but few public institutions adhere to this standard. Incidents like the breakdown of technology at this year’s democratic party caucuses in Iowa have (rightfully) made many citizens more wary of any government technology when it comes to our electoral processes. Encouraging the development and use of open source software has the potential to make technology developers more accountable and technology users more secure.</p><p>However, the government does not explicitly seek to convert software to free or see the need for doing so at most levels. In 2016, the United States instituted a source-code policy requiring 20% of code developed for or by an agency of the government to be released as open source software and be shared openly between agencies. This was a step in the right direction, but ultimately only a proposed target without actual deadlines or teeth behind it. In this talk I will examine the 2016 mandate and the impact it has had on the government. I will use this example to discuss the government’s history with proprietary technology and proponents of open source and free software within the government. I will focus on the history within the United States with notable examples of other countries provided. For example, I will discuss the Malaysian Public Sector Open Source Software Program and its success. I will finish by discussing hope for the future and what we can do to support the growth of free software in government. There are ways we can advocate for furthering the open source movement, by promoting free software at all levels of education and government and taking specific actions (call your senator!).</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Lisha_Sterling-Building_Alternative_Networks_for_Fun_and_Resistance.mp4,SeaGL2020-Lisha_Sterling-Building_Alternative_Networks_for_Fun_and_Resistance,2020-11-14,Lisha Sterling,Building Alternative Networks for Fun and Resistance,"<p>If all the networks are owned by a small handful of corporations, how can your network be free (as in speech)? If all the networks are surveilled by the government, how can any network by free? Is there any alternative?</p><p>This talk will tell you how to build several types of alternative networks with open source tools that can be used temporarily or for the long term, depending on need and context. I'll talk about choices of hardware and network type, how (and whether) to connect it to the wider Internet, and some basic security considerations to help you plan. I'll broadly cover light-based networks, smartphone network hacks, point to point radio networks, and mesh networks you can build with off the shelf (or thrift store) wifi routers. For each network type, I'll give some pros and cons, along with links to more detailed tutorials so you can try them out yourself.</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Ben_Cotton-Scheduling_your_open_source_project.mkv,SeaGL2020-Ben_Cotton-Scheduling_your_open_source_project,2020-11-14,Ben Cotton,Scheduling your open source project,"<p>You can’t release on time if you don’t know what “on time” means. This talk covers several ways to build release schedules for projects — calendar-based, feature-based, and “meh, it’s done I guess”. Attendees will learn what considerations should go into planning a release schedule, how to deal with exceptions. It will also cover some tools that can be used to give the schedule a physical representation.</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Paris_Buttfield_Addison_and_Tim_Nugent-First_steps_with_Swift_for_TensorFlow.mp4,SeaGL2020-Paris_Buttfield_Addison_and_Tim_Nugent-First_steps_with_Swift_for_TensorFlow,2020-11-14,Paris Buttfield-Addison & Tim Nugent,First steps with Swift for TensorFlow,"<p>This session will introduce Swift, the popular free and open source programming language introduced by Apple and developed by a huge community. You’ll learn why Swift is such an in-demand skill, why Swift is such an interesting language, and how to get started with it.</p><p>More specifically, you’ll learn how you can use Google’s Swift for TensorFlow project for modern, powerful machine learning on Linux, macOS, and Windows. Swift is a fabulous, powerful, fast, easy to learn alternative and companion to Python (and even works with the ubiquitous Jupyter notebooks). The time has never been better to learn about Swift (for machine learning).</p><p>Find out why Swift might just be the future of scientific computing and machine learning in this beginner friendly session.</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-Nocnica_Fee-Data_Liberation_Open_Source_Observability.mp4,SeaGL2020-Nocnica_Fee-Data_Liberation_Open_Source_Observability,2020-11-14,Nočnica Fee,Data Liberation: Open Source Observability,"<p>Observability is a very popular buzzword for measuring your system's performance, and vendors are extremely excited to sell you tools that will grant meaningful insight to performance problems.</p><p>But real observability isn't a product you can buy in a box, it's about truly understanding your system, reducing the number of 'black box' components in your stack, and quickly finding the cause of problems.</p><p>I'll show you how tools like Grafana and Prometheus can make it easy to measure your stack.</p>"
movies,seagl,Seattle GNU/Linux Conference,2020,https://creativecommons.org/licenses/by/3.0/,English,SeaGL2020-VM_Brasseur-Lets_Put_The_Free_Back_In_Free_Market.mp4,SeaGL2020-VM_Brasseur-Lets_Put_The_Free_Back_In_Free_Market,2020-11-14,VM Brasseur,Let's Put The Free Back In Free Market,Keynote
